---
import Logo from '../components/Logo.astro';
import { getRockets } from '../services/api';

const rockets = await getRockets();

//list rockets: w-56 pl-10 pr-4
---

<nav class="z-10 fixed w-full text-sm h-16 lg:h-[100px] text-white flex flex-row items-center">

    <ul class="flex tracking-tight lg:gap-6 opacity-100 transition-all duration-150 w-full justify-end lg:items-center navbar">
        <a href="/" class="pb-1 lg:top-8 m-auto lg:ml-24 w-40 lg:w-52">
            <Logo />
        </a>
		<div class="absolute lg:flex lg:flex-row gap-2 lg:gap-10 w-0 transition-all duration-300 ease lg:w-full overflow-hidden lg:justify-center items-center z-20 flex-col p-0 lg:p-0 pt-20 responsive-nav hidden">
			{
				rockets.map( rocket => (
					<li>
						<a href=`/${rocket.id}` class="relative responsive-element
							before:absolute before:left-0 before:z-0 before:top-4 before:h-px before:rounded before:w-full before:bg-white before:transition-transform before:duration-200 before:ease-in-out before:scale-x-0 before:origin-right
							hover:before:scale-x-100 hover:before:origin-left hover:before:transition-transform hover:before:duration-200 hover:before:ease-out
						">{rocket.name.toUpperCase()}</a>
					</li>
					<div class="lg:hidden h-px w-full bg-white opacity-15"></div>
				))
			}
		</div>
		<div class="absolute lg:hidden top-0 right-0 h-screen w-0 -z-10 bg-black responsive-background transition-all duration-300 ease"></div>
		<div class="w-5 h-5 flex flex-col justify-around cursor-pointer relative right-20 lg:hidden z-20" id="responsive-btn">
			<div class="h-[2px] w-full bg-white"></div>
			<div class="h-[2px] w-full bg-white"></div>
			<div class="h-[2px] w-full bg-white"></div>
		</div>
    </ul>
	<div class="absolute top-0 left-0 w-screen h-screen hidden bg-black opacity-50 z-10 transition-all duration-300 ease responsive-opacity"></div>
    <div class="background-navbar delay-75 h-full bg-black w-full scale-y-0 origin-top-right absolute -z-10 transition-all duration-[400ms] ease-out"></div>

</nav>

<script>
	
	const target = document.querySelector('.home');
	const backgroundNav = document.querySelector('.background-navbar');

	const options = {
		threshold: 0.1,
	}

	let observer = new IntersectionObserver((e) => {
		const isIntersecting = e[0].isIntersecting;

		if(isIntersecting) {
			backgroundNav.classList.replace('scale-y-100', 'scale-y-0');
		} else {
			backgroundNav.classList.replace('scale-y-0', 'scale-y-100');
		}
		let prevScrollPos = window.scrollY;
	
		window.onscroll = () => {
	
			const currentScrollPos = window.scrollY;
			const navbar = document.querySelector('.navbar');

			
			if(prevScrollPos < currentScrollPos) {
				navbar.classList.replace('opacity-100', 'opacity-0');
				backgroundNav.classList.replace('scale-y-100', 'scale-y-0');
			} else {
				navbar.classList.replace('opacity-0', 'opacity-100');
				
				if(!isIntersecting) {
					backgroundNav.classList.replace('scale-y-0', 'scale-y-100');
				}
			}
	
			prevScrollPos = currentScrollPos;
	
		}
	}, options);

	observer.observe(target);

	const responsiveBtn = document.querySelector('#responsive-btn');
	const opacity = document.querySelector('.responsive-opacity');
	const background = document.querySelector('.responsive-background');

	responsiveBtn.addEventListener('click', () => {
		const nav = document.querySelector('.responsive-nav');
		
		if(!nav.classList.contains('active')) {
			console.log('as')
			nav.classList.replace('w-0', 'w-56');
			nav.classList.add('pl-10');		
			nav.classList.add('pr-4');

			opacity.classList.toggle('hidden');

			background.classList.replace('w-0', 'w-56');
			
			nav.classList.add('active');
			nav.classList.remove('hidden');
			nav.classList.add('flex');

		} else {

			nav.classList.replace('w-56', 'w-0');
			nav.classList.remove('pl-10');
			nav.classList.remove('pr-4');
			
			opacity.classList.toggle('hidden');
			background.classList.replace('w-56', 'w-0');

			nav.classList.remove('active');

			nav.classList.add('hidden');
		}


	})

</script>

