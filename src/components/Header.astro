---
import Logo from '../components/Logo.astro';
import { getRockets } from '../services/api';

const rockets = await getRockets();
---

<nav class="z-10 fixed w-full text-sm h-[100px] text-white flex flex-row items-center justify-around">
    <ul class="flex tracking-tight gap-6 navbar opacity-100 transition-all duration-150">
        <a href="/" class="absolute top-8 left-24 w-52">
            <Logo />
        </a>
        {
            rockets.map( rocket => (
                <li>
                    <a href=`/${rocket.id}` class="relative 
                        before:absolute before:left-0 before:z-0 before:top-4 before:h-px before:rounded before:w-full before:bg-white before:transition-transform before:duration-200 before:ease-in-out before:scale-x-0 before:origin-right
                        hover:before:scale-x-100 hover:before:origin-left hover:before:transition-transform hover:before:duration-200 hover:before:ease-out
                    ">{rocket.name.toUpperCase()}</a>
                </li>
            ))
        }
    </ul>
    <div class="background-navbar delay-75 h-full bg-black w-full scale-y-0 origin-top-right absolute -z-10 transition-all duration-[400ms] ease-out"></div>
</nav>

<script>
	
	const target = document.querySelector('.home');
	const backgroundNav = document.querySelector('.background-navbar');

	const options = {
		threshold: 0.1,
	}

	let observer = new IntersectionObserver((e) => {
		const isIntersecting = e[0].isIntersecting;

		if(isIntersecting) {
			backgroundNav.classList.replace('scale-y-100', 'scale-y-0');
		} else {
			backgroundNav.classList.replace('scale-y-0', 'scale-y-100');
		}
		let prevScrollPos = window.scrollY;
	
		window.onscroll = () => {
	
			const currentScrollPos = window.scrollY;
			const navbar = document.querySelector('.navbar');
	
			if(prevScrollPos < currentScrollPos) {
				navbar.classList.replace('opacity-100', 'opacity-0');
				backgroundNav.classList.replace('scale-y-100', 'scale-y-0');
			} else {
				navbar.classList.replace('opacity-0', 'opacity-100');
				
				if(!isIntersecting) {
					backgroundNav.classList.replace('scale-y-0', 'scale-y-100');
				}
			}
	
			prevScrollPos = currentScrollPos;
	
		}
	}, options);

	observer.observe(target);

</script>

